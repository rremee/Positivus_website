@use "../base/vars.scss" as *;
@use "../libs/pxtorem.scss" as *;

// Button

@mixin button(
	$border: none,
	$borderHover: none,
	$bColor: $darkColor,
	$color: $blackColor,
	$bColorHover: $darkColor,
	$colorHover: $blackColor,
	$bColorFocus: $darkColorFocus,
	$borderFocus: none,
	$disableBgColor: $disableColorButton,
	$disableTextColor: $disableColorButtonText,
	$disableBorder: none
) {
	border-radius: rem(14);
	padding: rem(20) rem(35);
	background-color: $bColor;
	font-weight: 400;
	font-size: rem(20);
	line-height: 1.4;
	text-align: center;
	color: $color;
	border: $border;
	cursor: pointer;
	transition: 0.4s all;
	max-width: clamp(rem(250), 40vw, rem(264));
	&:focus {
		outline: none;
		background-color: $bColorFocus;
		border: $borderFocus;
	}
	&:active {
		background-color: $bColorFocus;
		transform: scale(0.92);
	}
	&:disabled {
		background-color: $disableBgColor;
		color: $disableTextColor;
		border: $disableBorder;
		cursor: not-allowed;
	}
	@media screen and (min-width: $tablet) {
		&:hover {
			background-color: $bColorHover;
			color: $colorHover;
			border: $borderHover;
		}
	}
}

@mixin buttonLink(
	$textColor: $blackColor,
	$bgColor: $darkColor,
	$arrowColor: $greenColor,
	$bgColorHover: $darkColorHover,
	$arrowColorHover: $greenColorHover
) {
	font-weight: 400;
	font-size: clamp(rem(18), 4vw, rem(20));
	line-height: 1.4;
	color: $textColor;
	display: flex;
	align-items: center;
	column-gap: rem(15);
	span {
		width: rem(41);
		height: rem(41);
		border-radius: 100%;
		background-color: $bgColor;
		color: $arrowColor;
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: rem(16);
		transition: 0.5s all;
	}
	@media screen and (min-width: $tablet) {
		&:hover {
			span {
				transform: rotate(390deg);
				background-color: $bgColorHover;
				color: $arrowColorHover;
			}
		}
	}
}

// Typography

@mixin typography(
	$weight: 400,
	$minFS: 16,
	$maxFS: 18,
	$vw: 5vw,
	$color: inherit
) {
	font-weight: $weight;
	font-size: clamp(rem($minFS), $vw, rem($maxFS));
	color: $color;
}

@mixin headingBack($BGColor: $greenColor) {
	background-color: $BGColor;
	padding: 0 rem(7);
	border-radius: rem(7);
	box-decoration-break: clone;
}

@mixin hoverLink($BGColor: $greenColor) {
	position: relative;
	transition: 0.5s all;
	&::before {
		content: "";
		position: absolute;
		width: 110%;
		height: 0%;
		background-color: $BGColor;
		left: 50%;
		bottom: 0%;
		transform: translateX(-50%);
		border-radius: rem(7);
		z-index: -1;
		transition: 0.5s all;
	}
	@media screen and (min-width: $tablet) {
		&:hover {
			&::before {
				height: 44%;
			}
		}
	}
}
